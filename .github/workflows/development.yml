name: Deploy to Development
on:
  push:
    branches:
      - development
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TYPEORM_HOST: ${secrets:TYPEORM_HOST}
      TYPEORM_PORT: ${secrets:TYPEORM_PORT}
      TYPEORM_USERNAME: ${secrets:TYPEORM_USERNAME}
      TYPEORM_PASSWORD: ${secrets:TYPEORM_PASSWORD}
      TYPEORM_DATABASE: ${secrets:TYPEORM_DATABASE}
      EXPRESS_PORT: ${secrets:EXPRESS_PORT}
      JWT_SECRET: ${secrets:JWT_SECRET}
      JUST1S_PRIVATE_KEY: ${secrets:JUST1S_PRIVATE_KEY}
      JUST1S_CERT: ${secrets:JUST1S_CERT}
      SLS_DEBUG: "*"

    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}

      - name: npm install
        run: npm install

      - name: Install Serverless Framework
        run: npm install -g serverless

      # - name: Serverless AWS authentication
      #   run: sls config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   env:
      #     SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

      - name: Deploy Lambda functions
        run: sls deploy --stage development
      # - name: serverless deploy
      #   uses: serverless/github-action@master
      #   with:
      #     args: deploy --stage development
